---
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: Secret
metadata:
  name: regcred
  namespace: demo
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJkZXNtbzk5OXIiLCJwYXNzd29yZCI6IlU5QXNlVGF5cUY5UlJCd0l2Q1k0IiwiZW1haWwiOiJqZWFubWFyYy5qaW0uYW5kcmVAZ21haWwuY29tIiwiYXV0aCI6IlpHVnpiVzg1T1RseU9sVTVRWE5sVkdGNWNVWTVVbEpDZDBsMlExazAifX19
---
apiVersion: v1
kind: Secret
metadata:
  namespace: demo
  name: demo-chap-secret
type: "kubernetes.io/iscsi-chap"
data:
  discovery.sendtargets.auth.username: ZGVtbw==
  discovery.sendtargets.auth.password: VHJtK1lZaXZvMUNZSGszcGFGVWMrcTdCMmdJPQo=
  node.session.auth.username: ZGVtbw==
  node.session.auth.password: VHJtK1lZaXZvMUNZSGszcGFGVWMrcTdCMmdJPQo=
---
apiVersion: v1
kind: Secret
metadata:
  namespace: demo
  name: with-envfrom-secret
data:
  title: dmVyeXNlY3JldA==
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: demo-pv
  namespace: demo
spec:
  storageClassName: manual
  capacity:
    storage: 50Mi
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: /tmp/demo
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: demo-pvc
  namespace: demo
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-minio
  namespace: demo
data:
  RESTIC_PASSWORD: bHIyOXhtOTU=
  AWS_ACCESS_KEY_ID: OWFTSXZBSEVzWlNVMmkyTU9zVGxWSk1lL1NjPQ==
  AWS_SECRET_ACCESS_KEY: WVN5ck9ncVllcjBWNFNLdlVOcmx2OGhjTllhZGZuN2xaNjBIaXRlL3djWT0=
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Repo
metadata:
  name: repo-local
  namespace: demo
spec:
  backend:
    local:
      source:
        emptyDir:
  repositorySecrets: secret-minio
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Repo
metadata:
  name: repo-minio
  namespace: demo
spec:
  backend:
    s3:
      server: raid5.desmojim.fr:9000
      bucket: testbucket2
  repositorySecrets: secret-minio
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Function
metadata:
  name: restore-pg
  namespace: demo
spec:
  name: restore-pg
  image: desmo999r/formolcli:latest
  args: ["postgres", "restore", "--hostname", $(PGHOST), "--database", $(PGDATABASE), "--username", $(PGUSER), "--password", $(PGPASSWD), "--file", "/output/backup-pg.sql"]
  env:
    - name: PGHOST
      value: postgres
    - name: PGDATABASE
      value: demopostgres
    - name: PGUSER
      value: demopostgres
    - name: PGPASSWD
      value: password123!
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Function
metadata:
  name: with-envfrom
  namespace: demo
spec:
  name: with-envfrom
  command: ["touch", $(title)]
  envFrom:
    - secretRef:
        name: with-envfrom-secret
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Function
metadata:
  name: with-env
  namespace: demo
spec:
  name: with-env
  command: ["touch", $(TESTFILE)]
  env:
    - name: TESTFILE
      value: /data/testfile
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Function
metadata:
  name: backup-pg
  namespace: demo
spec:
  name: backup-pg
  image: desmo999r/formolcli:latest
  args: ["postgres", "backup", "--hostname", $(PGHOST), "--database", $(PGDATABASE), "--username", $(PGUSER), "--password", $(PGPASSWD), "--file", "/output/backup-pg.sql"]
  env:
    - name: PGHOST
      value: postgres
    - name: PGDATABASE
      value: demopostgres
    - name: PGUSER
      value: demopostgres
    - name: PGPASSWD
      value: password123!
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Function
metadata:
  name: maintenance-off
  namespace: demo
spec:
  name: maintenance-off
  command: ["/bin/sh", "-c", "echo $(date +%Y/%m/%d-%H:%M:%S) maintenance-off >> /data/logs.txt"]
---
apiVersion: formol.desmojim.fr/v1alpha1
kind: Function
metadata:
  name: maintenance-on
  namespace: demo
spec:
  name: maintenance-on
  command: ["/bin/sh", "-c", "echo $(date +%Y/%m/%d-%H:%M:%S) maintenance-on >> /data/logs.txt"]
